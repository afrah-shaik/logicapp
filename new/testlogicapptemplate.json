{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "logicAppName": {
      "type": "string",
      "defaultValue": "Hybrid.AzA.BizB.InventoryOnHand",
      "metadata": {
        "description": "Name of the Logic App."
      }
    },
    "logicAppLocation": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "allowedValues": [
        "[resourceGroup().location]",
        "eastasia",
        "southeastasia",
        "centralus",
        "eastus",
        "eastus2",
        "westus",
        "northcentralus",
        "southcentralus",
        "northeurope",
        "westeurope",
        "japanwest",
        "japaneast",
        "brazilsouth",
        "australiaeast",
        "australiasoutheast",
        "westcentralus",
        "westus2"
      ],
      "metadata": {
        "description": "Location of the Logic App."
      }
    },
    "RecurrenceFrequency": {
      "type": "string",
      "defaultValue": "Day"
    },
    "RecurrenceInterval": {
      "type": "int",
      "defaultValue": 1
    },
    "RecurrenceSchedule": {
      "type": "Object",
      "defaultValue": {
        "hours": [
          "7"
        ],
        "minutes": [
          0
        ]
      }
    },
    "servicebus-4_name": {
      "type": "string",
      "defaultValue": "servicebus-4"
    },
    "servicebus-4_displayName": {
      "type": "string",
      "defaultValue": "orderreturns"
    },
    "servicebus_namespace_name": {
      "type": "string",
      "defaultValue": "REPLACE__servicebus_namespace"
    },
    "servicebus_resourceGroupName": {
      "type": "string",
      "defaultValue": "REPLACE__servicebus_rg"
    },
    "servicebus_accessKey_name": {
      "type": "string",
      "defaultValue": "RootManageSharedAccessKey"
    },
    "sql-7_name": {
      "type": "string",
      "defaultValue": "sql-7"
    },
    "sql-7_displayName": {
      "type": "string",
      "defaultValue": "testsqldb test-poc-sqldb-server.database.windows.net"
    },
    "sql-7_server": {
      "type": "string",
      "defaultValue": "test-poc-sqldb-server.database.windows.net",
      "metadata": {
        "description": "SQL server name"
      }
    },
    "sql-7_database": {
      "type": "string",
      "defaultValue": "testsqldb",
      "metadata": {
        "description": "SQL database name"
      }
    },
    "sql-7_username": {
      "type": "securestring",
      "defaultValue": null,
      "metadata": {
        "description": "Username credential"
      }
    },
    "sql-7_password": {
      "type": "securestring",
      "defaultValue": null,
      "metadata": {
        "description": "Password credential"
      }
    }
  },
  "variables": {},
  "resources": [
    {
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2016-06-01",
      "name": "[parameters('logicAppName')]",
      "location": "[parameters('logicAppLocation')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', parameters('servicebus-4_name'))]",
        "[resourceId('Microsoft.Web/connections', parameters('sql-7_name'))]"
      ],
      "properties": {
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            }
          },
          "triggers": {
            "Recurrence": {
              "recurrence": {
                "frequency": "[parameters('RecurrenceFrequency')]",
                "interval": "[parameters('RecurrenceInterval')]",
                "schedule": "[parameters('RecurrenceSchedule')]"
              },
              "type": "Recurrence"
            }
          },
          "actions": {
            "Compose": {
              "runAfter": {
                "InventoryOnHand_records_JSON_to_XML": [
                  "Succeeded"
                ]
              },
              "type": "Compose",
              "inputs": "@variables('InventoryRecordsRoot')"
            },
            "Get_Rows_from_InventoryOnHand_Table": {
              "runAfter": {},
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['sql']['connectionId']"
                  }
                },
                "method": "get",
                "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('default'))},@{encodeURIComponent(encodeURIComponent('default'))}/tables/@{encodeURIComponent(encodeURIComponent('[dbo].[InventoryOnHand]'))}/items",
                "queries": {
                  "$select": "AVAILORDERED,AVAILPHYSICAL,BATCHEXPIRYDATE,DEDUCTED,INVENTBATCHID,\nINVENTDIMID,INVENTLOCATIONID,INVENTSERIALID,INVENTSITEID,ITEMGROUPID,ITEMID,LASTUPDDATEEXPECTED,\nLASTUPDDATEPHYSICAL,PHYSICALINVENT,PHYSICALVALUE,POSTEDQTY,POSTEDVALUE,PRODUCTLIFECYCLESTATEID,WMSLOCATIONID"
                }
              }
            },
            "Initialize_InventoryOnHand_record_array": {
              "runAfter": {
                "Get_Rows_from_InventoryOnHand_Table": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "InventoryRecords",
                    "type": "array",
                    "value": "@body('Get_Rows_from_InventoryOnHand_Table')?['value']"
                  }
                ]
              }
            },
            "InventoryOnHand_records_JSON_to_XML": {
              "runAfter": {
                "Initialize_InventoryOnHand_record_array": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "InventoryRecordsRoot",
                    "type": "object",
                    "value": "@xml(json(concat('{\"Document\":{\"SM_INVENTORYDIMENSIONONHANDENTITY\":',variables('InventoryRecords'),'}}')))"
                  }
                ]
              }
            },
            "Send_one_or_more_messages": {
              "runAfter": {
                "Compose": [
                  "Succeeded"
                ]
              },
              "type": "ApiConnection",
              "inputs": {
                "body": [
                  {
                    "ContentData": "@{base64(outputs('Compose'))}",
                    "ContentType": "\"application/json\""
                  }
                ],
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['servicebus']['connectionId']"
                  }
                },
                "method": "post",
                "path": "/@{encodeURIComponent(encodeURIComponent('smtobizb-inventoryonhand-queue'))}/messages/batch"
              }
            }
          },
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "servicebus": {
                "id": "[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',parameters('logicAppLocation'),'/managedApis/servicebus')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('servicebus-4_name'))]",
                "connectionName": "[parameters('servicebus-4_name')]"
              },
              "sql": {
                "id": "[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',parameters('logicAppLocation'),'/managedApis/sql')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('sql-7_name'))]",
                "connectionName": "[parameters('sql-7_name')]"
              }
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "location": "[parameters('logicAppLocation')]",
      "name": "[parameters('sql-7_name')]",
      "properties": {
        "api": {
          "id": "[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',parameters('logicAppLocation'),'/managedApis/sql')]"
        },
        "displayName": "[parameters('sql-7_displayName')]",
        "parameterValues": {
          "server": "[parameters('sql-7_server')]",
          "database": "[parameters('sql-7_database')]",
          "username": "[parameters('sql-7_username')]",
          "password": "[parameters('sql-7_password')]"
        }
      }
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "location": "[parameters('logicAppLocation')]",
      "name": "[parameters('servicebus-4_name')]",
      "properties": {
        "api": {
          "id": "[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',parameters('logicAppLocation'),'/managedApis/servicebus')]"
        },
        "displayName": "[parameters('servicebus-4_displayName')]",
        "parameterValues": {
          "connectionString": "[listkeys(resourceId(parameters('servicebus_resourceGroupName'),'Microsoft.ServiceBus/namespaces/authorizationRules', parameters('servicebus_namespace_name'), parameters('servicebus_accessKey_name')), '2017-04-01').primaryConnectionString]"
        }
      }
    }
  ],
  "outputs": {}
}
